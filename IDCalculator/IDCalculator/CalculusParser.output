Terminals which are not used

   LOW


State 15 conflicts: 2 shift/reduce
State 40 conflicts: 5 reduce/reduce


Grammar

    0 $accept: result $end

    1 result: func

    2 func: LP func RP
    3     | func OADD func
    4     | func OSUB func
    5     | OSUB func
    6     | func OMUL func
    7     | num func
    8     | func ODIV func
    9     | func POWER func
   10     | namefunc LP func RP
   11     | IOPR func DOPR VAR
   12     | DOPR func ODIV DOPR VAR
   13     | VAR
   14     | num

   15 namefunc: FUNC_SIN
   16         | FUNC_COS
   17         | FUNC_LN

   18 num: NUM
   19    | CONST_PI
   20    | CONST_E


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 18
LP (259) 2 10
RP (260) 2 10
OADD (261) 3
OSUB (262) 4 5
OMUL (263) 6
ODIV (264) 8 12
POWER (265) 9
FUNC_SIN (266) 15
FUNC_COS (267) 16
FUNC_LN (268) 17
DOPR (269) 11 12
VAR (270) 11 12 13
IOPR (271) 11
CONST_E (272) 20
CONST_PI (273) 19
LOW (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
result (21)
    on left: 1, on right: 0
func (22)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14, on right: 1 2 3 4 5 6
    7 8 9 10 11 12
namefunc (23)
    on left: 15 16 17, on right: 10
num (24)
    on left: 18 19 20, on right: 7 14


state 0

    0 $accept: . result $end

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    result    go to state 12
    func      go to state 13
    namefunc  go to state 14
    num       go to state 15


state 1

   18 num: NUM .

    $default  reduce using rule 18 (num)


state 2

    2 func: LP . func RP

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 16
    namefunc  go to state 14
    num       go to state 15


state 3

    5 func: OSUB . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 17
    namefunc  go to state 14
    num       go to state 15


state 4

   15 namefunc: FUNC_SIN .

    $default  reduce using rule 15 (namefunc)


state 5

   16 namefunc: FUNC_COS .

    $default  reduce using rule 16 (namefunc)


state 6

   17 namefunc: FUNC_LN .

    $default  reduce using rule 17 (namefunc)


state 7

   12 func: DOPR . func ODIV DOPR VAR

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 18
    namefunc  go to state 14
    num       go to state 15


state 8

   13 func: VAR .

    $default  reduce using rule 13 (func)


state 9

   11 func: IOPR . func DOPR VAR

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 19
    namefunc  go to state 14
    num       go to state 15


state 10

   20 num: CONST_E .

    $default  reduce using rule 20 (num)


state 11

   19 num: CONST_PI .

    $default  reduce using rule 19 (num)


state 12

    0 $accept: result . $end

    $end  shift, and go to state 20


state 13

    1 result: func .
    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func

    OADD   shift, and go to state 21
    OSUB   shift, and go to state 22
    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25

    $default  reduce using rule 1 (result)


state 14

   10 func: namefunc . LP func RP

    LP  shift, and go to state 26


state 15

    7 func: num . func
   14     | num .

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    OSUB      [reduce using rule 14 (func)]
    DOPR      [reduce using rule 14 (func)]
    $default  reduce using rule 14 (func)

    func      go to state 27
    namefunc  go to state 14
    num       go to state 15


state 16

    2 func: LP func . RP
    3     | func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func

    RP     shift, and go to state 28
    OADD   shift, and go to state 21
    OSUB   shift, and go to state 22
    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25


state 17

    3 func: func . OADD func
    4     | func . OSUB func
    5     | OSUB func .
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func

    $default  reduce using rule 5 (func)


state 18

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func
   12     | DOPR func . ODIV DOPR VAR

    OADD   shift, and go to state 21
    OSUB   shift, and go to state 22
    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 29
    POWER  shift, and go to state 25


state 19

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func
   11     | IOPR func . DOPR VAR

    OADD   shift, and go to state 21
    OSUB   shift, and go to state 22
    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25
    DOPR   shift, and go to state 30


state 20

    0 $accept: result $end .

    $default  accept


state 21

    3 func: func OADD . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 31
    namefunc  go to state 14
    num       go to state 15


state 22

    4 func: func OSUB . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 32
    namefunc  go to state 14
    num       go to state 15


state 23

    6 func: func OMUL . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 33
    namefunc  go to state 14
    num       go to state 15


state 24

    8 func: func ODIV . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 34
    namefunc  go to state 14
    num       go to state 15


state 25

    9 func: func POWER . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 35
    namefunc  go to state 14
    num       go to state 15


state 26

   10 func: namefunc LP . func RP

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 36
    namefunc  go to state 14
    num       go to state 15


state 27

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | num func .
    8     | func . ODIV func
    9     | func . POWER func

    POWER  shift, and go to state 25

    $default  reduce using rule 7 (func)


state 28

    2 func: LP func RP .

    $default  reduce using rule 2 (func)


state 29

    8 func: func ODIV . func
   12     | DOPR func ODIV . DOPR VAR

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 37
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 34
    namefunc  go to state 14
    num       go to state 15


state 30

   11 func: IOPR func DOPR . VAR

    VAR  shift, and go to state 38


state 31

    3 func: func . OADD func
    3     | func OADD func .
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func

    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25

    $default  reduce using rule 3 (func)


state 32

    3 func: func . OADD func
    4     | func . OSUB func
    4     | func OSUB func .
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func

    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25

    $default  reduce using rule 4 (func)


state 33

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    6     | func OMUL func .
    8     | func . ODIV func
    9     | func . POWER func

    POWER  shift, and go to state 25

    $default  reduce using rule 6 (func)


state 34

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    8     | func ODIV func .
    9     | func . POWER func

    POWER  shift, and go to state 25

    $default  reduce using rule 8 (func)


state 35

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func
    9     | func POWER func .

    $default  reduce using rule 9 (func)


state 36

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    8     | func . ODIV func
    9     | func . POWER func
   10     | namefunc LP func . RP

    RP     shift, and go to state 39
    OADD   shift, and go to state 21
    OSUB   shift, and go to state 22
    OMUL   shift, and go to state 23
    ODIV   shift, and go to state 24
    POWER  shift, and go to state 25


state 37

   12 func: DOPR . func ODIV DOPR VAR
   12     | DOPR func ODIV DOPR . VAR

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 40
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 18
    namefunc  go to state 14
    num       go to state 15


state 38

   11 func: IOPR func DOPR VAR .

    $default  reduce using rule 11 (func)


state 39

   10 func: namefunc LP func RP .

    $default  reduce using rule 10 (func)


state 40

   12 func: DOPR func ODIV DOPR VAR .
   13     | VAR .

    OADD      reduce using rule 12 (func)
    OADD      [reduce using rule 13 (func)]
    OSUB      reduce using rule 12 (func)
    OSUB      [reduce using rule 13 (func)]
    OMUL      reduce using rule 12 (func)
    OMUL      [reduce using rule 13 (func)]
    ODIV      reduce using rule 12 (func)
    ODIV      [reduce using rule 13 (func)]
    POWER     reduce using rule 12 (func)
    POWER     [reduce using rule 13 (func)]
    $default  reduce using rule 12 (func)
