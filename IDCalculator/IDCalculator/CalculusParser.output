Terminals which are not used

   LOW


Grammar

    0 $accept: result $end

    1 result: func

    2 func: pfunc
    3     | func OADD func
    4     | func OSUB func
    5     | OSUB func
    6     | func OMUL func
    7     | func OMOD func
    8     | pfunc pfunc
    9     | num func
   10     | func ODIV func
   11     | func POWER func
   12     | namefunc LP func RP
   13     | IOPR func DX
   14     | DOPR func ODIV DX
   15     | VAR
   16     | num

   17 pfunc: LP func RP

   18 namefunc: FUNC_SIN
   19         | FUNC_COS
   20         | FUNC_LN

   21 num: NUM
   22    | CONST_PI
   23    | CONST_E


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 21
LP (259) 12 17
RP (260) 12 17
OADD (261) 3
OSUB (262) 4 5
OMUL (263) 6
ODIV (264) 10 14
OMOD (265) 7
POWER (266) 11
FUNC_SIN (267) 18
FUNC_COS (268) 19
FUNC_LN (269) 20
DOPR (270) 14
VAR (271) 15
IOPR (272) 13
DX (273) 13 14
CONST_E (274) 23
CONST_PI (275) 22
LOW (276)
HIGH (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
result (24)
    on left: 1, on right: 0
func (25)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 1 3 4
    5 6 7 9 10 11 12 13 14 17
pfunc (26)
    on left: 17, on right: 2 8
namefunc (27)
    on left: 18 19 20, on right: 12
num (28)
    on left: 21 22 23, on right: 9 16


state 0

    0 $accept: . result $end

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    result    go to state 12
    func      go to state 13
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 1

   21 num: NUM .

    $default  reduce using rule 21 (num)


state 2

   17 pfunc: LP . func RP

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 17
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 3

    5 func: OSUB . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 18
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 4

   18 namefunc: FUNC_SIN .

    $default  reduce using rule 18 (namefunc)


state 5

   19 namefunc: FUNC_COS .

    $default  reduce using rule 19 (namefunc)


state 6

   20 namefunc: FUNC_LN .

    $default  reduce using rule 20 (namefunc)


state 7

   14 func: DOPR . func ODIV DX

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 19
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 8

   15 func: VAR .

    $default  reduce using rule 15 (func)


state 9

   13 func: IOPR . func DX

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 20
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 10

   23 num: CONST_E .

    $default  reduce using rule 23 (num)


state 11

   22 num: CONST_PI .

    $default  reduce using rule 22 (num)


state 12

    0 $accept: result . $end

    $end  shift, and go to state 21


state 13

    1 result: func .
    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func

    OADD   shift, and go to state 22
    OSUB   shift, and go to state 23
    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27

    $default  reduce using rule 1 (result)


state 14

    2 func: pfunc .
    8     | pfunc . pfunc

    LP  shift, and go to state 2

    $default  reduce using rule 2 (func)

    pfunc  go to state 28


state 15

   12 func: namefunc . LP func RP

    LP  shift, and go to state 29


state 16

    9 func: num . func
   16     | num .

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    $default  reduce using rule 16 (func)

    func      go to state 30
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 17

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func
   17 pfunc: LP func . RP

    RP     shift, and go to state 31
    OADD   shift, and go to state 22
    OSUB   shift, and go to state 23
    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27


state 18

    3 func: func . OADD func
    4     | func . OSUB func
    5     | OSUB func .
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func

    $default  reduce using rule 5 (func)


state 19

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func
   14     | DOPR func . ODIV DX

    OADD   shift, and go to state 22
    OSUB   shift, and go to state 23
    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 32
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27


state 20

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func
   13     | IOPR func . DX

    OADD   shift, and go to state 22
    OSUB   shift, and go to state 23
    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27
    DX     shift, and go to state 33


state 21

    0 $accept: result $end .

    $default  accept


state 22

    3 func: func OADD . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 34
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 23

    4 func: func OSUB . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 35
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 24

    6 func: func OMUL . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 36
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 25

   10 func: func ODIV . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 37
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 26

    7 func: func OMOD . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 38
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 27

   11 func: func POWER . func

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 39
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 28

    8 func: pfunc pfunc .

    $default  reduce using rule 8 (func)


state 29

   12 func: namefunc LP . func RP

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 40
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 30

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
    9     | num func .
   10     | func . ODIV func
   11     | func . POWER func

    POWER  shift, and go to state 27

    $default  reduce using rule 9 (func)


state 31

   17 pfunc: LP func RP .

    $default  reduce using rule 17 (pfunc)


state 32

   10 func: func ODIV . func
   14     | DOPR func ODIV . DX

    NUM       shift, and go to state 1
    LP        shift, and go to state 2
    OSUB      shift, and go to state 3
    FUNC_SIN  shift, and go to state 4
    FUNC_COS  shift, and go to state 5
    FUNC_LN   shift, and go to state 6
    DOPR      shift, and go to state 7
    VAR       shift, and go to state 8
    IOPR      shift, and go to state 9
    DX        shift, and go to state 41
    CONST_E   shift, and go to state 10
    CONST_PI  shift, and go to state 11

    func      go to state 37
    pfunc     go to state 14
    namefunc  go to state 15
    num       go to state 16


state 33

   13 func: IOPR func DX .

    $default  reduce using rule 13 (func)


state 34

    3 func: func . OADD func
    3     | func OADD func .
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func

    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27

    $default  reduce using rule 3 (func)


state 35

    3 func: func . OADD func
    4     | func . OSUB func
    4     | func OSUB func .
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func

    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27

    $default  reduce using rule 4 (func)


state 36

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    6     | func OMUL func .
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func

    POWER  shift, and go to state 27

    $default  reduce using rule 6 (func)


state 37

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   10     | func ODIV func .
   11     | func . POWER func

    POWER  shift, and go to state 27

    $default  reduce using rule 10 (func)


state 38

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
    7     | func OMOD func .
   10     | func . ODIV func
   11     | func . POWER func

    POWER  shift, and go to state 27

    $default  reduce using rule 7 (func)


state 39

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func
   11     | func POWER func .

    $default  reduce using rule 11 (func)


state 40

    3 func: func . OADD func
    4     | func . OSUB func
    6     | func . OMUL func
    7     | func . OMOD func
   10     | func . ODIV func
   11     | func . POWER func
   12     | namefunc LP func . RP

    RP     shift, and go to state 42
    OADD   shift, and go to state 22
    OSUB   shift, and go to state 23
    OMUL   shift, and go to state 24
    ODIV   shift, and go to state 25
    OMOD   shift, and go to state 26
    POWER  shift, and go to state 27


state 41

   14 func: DOPR func ODIV DX .

    $default  reduce using rule 14 (func)


state 42

   12 func: namefunc LP func RP .

    $default  reduce using rule 12 (func)
